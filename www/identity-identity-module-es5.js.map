{"version":3,"sources":["./src/app/withings/identity/identity.page.html","./src/app/withings/identity/identity-routing.module.ts","./src/app/withings/identity/identity.module.ts","./src/app/withings/identity/identity.page.scss","./src/app/withings/identity/identity.page.ts"],"names":[],"mappings":"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","file":"identity-identity-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n        <ion-toolbar>\\r\\n          <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-menu-button></ion-menu-button>\\r\\n          </ion-buttons>\\r\\n          <ion-title>\\r\\n            SleepExpert\\r\\n          </ion-title>\\r\\n        </ion-toolbar>\\r\\n      </ion-header>\\r\\n  \\r\\n  <ion-content>\\r\\n        <h1 *ngIf=\\\"!name\\\">\\r\\n                Hallo\\r\\n        </h1>\\r\\n        <h1 *ngIf=\\\"name\\\">\\r\\n                Hallo, {{name}}\\r\\n        </h1>\\r\\n  \\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"login()\\\">\\r\\n          Login\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"logoff()\\\">\\r\\n          Logout\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"debug()\\\">\\r\\n          DEBUG\\r\\n      </button>\\r\\n\\r\\n      <li *ngFor=\\\"let product of sleepSummaryObservable | async\\\" >\\r\\n          -- id: {{product}}\\r\\n      </li>\\r\\n\\r\\n  </ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IdentityPage } from './identity.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IdentityPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class IdentityPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { IdentityPageRoutingModule } from './identity-routing.module';\r\n\r\nimport { IdentityPage } from './identity.page';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { OAuthModule } from 'angular-oauth2-oidc';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    IdentityPageRoutingModule,\r\n\r\n\r\n    HttpClientModule,\r\n    OAuthModule.forRoot({\r\n      resourceServer: {\r\n              allowedUrls: ['https://sleepexpert.voxte.ch/'],\r\n              sendAccessToken: true\r\n              }\r\n            })],\r\n\r\n  declarations: [IdentityPage]\r\n})\r\nexport class IdentityPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpdGhpbmdzL2lkZW50aXR5L2lkZW50aXR5LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\r\nimport { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\nimport { formatDate } from \"@angular/common\";\r\n\r\nexport const authConfig: AuthConfig = {\r\n\r\n  // Url of the Identity Provider\r\n  //issuer: 'https://account.withings.com/oauth2_user/authorize2',\r\n  issuer: 'https://account.withings.com/oauth2_user/authorize2',\r\n\r\n\r\n  // URL of the SPA to redirect the user to after login\r\n  redirectUri: 'https://sleepexpert.voxte.ch/authorize',\r\n  responseType: 'code',\r\n\r\n  // set the scope for the permissions the client should request\r\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\r\n  //scope: 'openid profile email voucher',\r\n  //scope: 'user.activity',\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'app-identity',\r\n  templateUrl: './identity.page.html',\r\n  styleUrls: ['./identity.page.scss'],\r\n})\r\nexport class IdentityPage implements OnInit {\r\n\r\n  authentication_code : string;\r\n  private sleepSummaryObservable : Observable<any> ; \r\n\r\n  constructor(private oauthService: OAuthService, private route: ActivatedRoute, private http: HttpClient) { \r\n    this.oauthService.configure(authConfig);\r\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\r\n    this.oauthService.showDebugInformation = true; \r\n    this.oauthService.loginUrl = \"https://account.withings.com/oauth2_user/authorize2\"; //Id-Provider\r\n    this.oauthService.logoutUrl = \"https://account.withings.com/logout\";\r\n    this.oauthService.issuer = \"https://account.withings.com/oauth2_user/authorize2\";\r\n    this.oauthService.tokenEndpoint = \"https://account.withings.com/oauth2/token\";\r\n    this.oauthService.redirectUri = \"https://sleepexpert.voxte.ch/withings/identity\"; //window.location.origin + \"/index.html\";\r\n    this.oauthService.clientId = \"75567fc18fe0881c2757206ee375044433a5a76e12f6796d1f300b605683f22d\";\r\n    this.oauthService.dummyClientSecret = \"cdbed08c93de9bc94afa4dcfbff800f23e818056415f2e17094fb14663eaa119\";\r\n    this.oauthService.scope = \"user.activity\";\r\n    this.oauthService.customQueryParams = { 'scope': 'user.activity' , 'response_type' : 'code', 'grant_type': 'authorization_code'};\r\n    this.oauthService.responseType = 'code';\r\n    // Use setStorage to use sessionStorage or another implementation of the TS-type Storage instead of localStorage\r\n    this.oauthService.setStorage(sessionStorage);\r\n  }\r\n\r\npublic login() {\r\n    this.oauthService.initCodeFlow();\r\n}\r\n\r\npublic logoff() {\r\n    //this.oauthService.logOut();\r\n    let format = 'yyyy-MM-dd';\r\n    let date = new Date();\r\n    let formattedDate = formatDate(date, format, \"en-US\");\r\n    console.log(formattedDate);\r\n}\r\n\r\npublic debug() {\r\n    //console.log(this.oauthService.getIdentityClaims());\r\n    //this.route.queryParams.subscribe(params => {console.log(params.code);});\r\n    let dateformat = 'yyyy-MM-dd';\r\n    //let enddateymd = new Date();\r\n    let startdateymd = \"2019-12-03\"\r\n    let enddate  = new Date();\r\n    let enddateymd = formatDate(enddate, dateformat, \"en-US\");\r\n    //startdate.setDate(startdate.getDate() - 7)\r\n    //this.sleepSummaryObservable = this.http.get(\"https://my-json-server.typicode.com/typicode/demo/comments\");\r\n    let headers = new HttpHeaders()\r\n        .set(\"Authorization\", \"Bearer \" + this.oauthService.getAccessToken());\r\n    let params = new HttpParams()\r\n        .set(\"action\",\"getsummary\")\r\n        .set(\"data_fields\",\"durationtosleep,durationtowakeup,deepsleepduration,lightsleepduration,sleep_score,wakeupcount,wakeupduration\")\r\n        .set(\"startdateymd\", startdateymd.toString())\r\n        .set(\"enddateymd\", enddateymd.toString())\r\n    console.log(startdateymd,enddateymd,this.oauthService.getAccessToken())\r\n    console.log(\"startdateymd=\"+startdateymd+\"&enddateymd=\"+enddateymd)\r\n    this.http.get(\"https://wbsapi.withings.net/v2/sleep\", {headers, params}).subscribe((res : any[])=>{console.log(res)});\r\n    //this.sleepSummaryObservable = \r\n    //console.log(this.sleepSummaryObservable)\r\n}\r\n\r\npublic get name() {\r\n    let claims : any = this.oauthService.getIdentityClaims();\r\n    if (!claims) return null;\r\n    return claims;\r\n}\r\n\r\nngOnInit() { \r\n  if (this.route.snapshot.queryParams.code) { \r\n    console.log(\"NOW TRYING TO LOG IN TO GET ACCESS TOKEN\")\r\n    this.authentication_code = this.route.snapshot.queryParams.code; \r\n    this.oauthService.tryLogin();\r\n  }\r\n }\r\n    \r\n}"],"sourceRoot":""}