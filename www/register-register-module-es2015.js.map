{"version":3,"sources":["./src/app/register/register.page.html","./src/app/register/register-routing.module.ts","./src/app/register/register.module.ts","./src/app/register/register.page.scss","./src/app/register/register.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,s5C;;;;;;;;;;;;;;;;;;;ACAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AAW/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;ACnB/B,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;ACAb;AACG;AACZ;AAKzC,0FAA0F;AAE3C;AAM/C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAMvB,YAAmB,MAAuB,EACvB,KAAsB;IAC7B,qEAAqE;IAC9D,MAAc;QAHd,WAAM,GAAN,MAAM,CAAiB;QACvB,UAAK,GAAL,KAAK,CAAiB;QAEtB,WAAM,GAAN,MAAM,CAAQ;QAPjC,WAAM,GAAG,EAAE,CAAC;QACZ,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;IAKuB,CAAC;IAEvC,QAAQ;IACR,CAAC;IAEI,QAAQ;;YACX,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;YAC7C,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;gBACzD,OAAO,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;aAC/C;YACD,IAAI;gBACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,MAAM,GAAG,YAAY,EAAE,QAAQ,CAAC,CAAC;gBACnG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAClC,4BAA4B;gBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;aACtC;QACH,CAAC;KAAA;IACG,SAAS,CAAE,MAAc,EAAE,OAAe;;YAC9C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBACpC,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE,CAAC,eAAe,CAAC;aAC3B,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;CAEA;;YAlC4B,kEAAe;YAChB,8DAAe;YAEd,sDAAM;;AATtB,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gJAAmC;;KAEpC,CAAC;2EAO2B,kEAAe;QAChB,8DAAe;QAEd,sDAAM;GATtB,YAAY,CAwCxB;AAxCwB","file":"register-register-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n       <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"assets/img/sheep.png\\\">\\n      </ion-avatar>\\n      <ion-title>SleepExpert</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title> Bitte registrieren Sie sich </ion-card-title>\\n      </ion-card-header>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Benutzername</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userID\\\"></ion-input>\\n        </ion-item>\\n  \\n        <ion-item>\\n          <ion-label position=\\\"floating\\\"> Kennwort</ion-label>\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n          <!-- @type password := this hides the text and it makes it \\n        appear as if its *** -->\\n        </ion-item>\\n                <ion-item>\\n            <ion-label position=\\\"floating\\\"> Kennwort best√§tige\\n              \\n            </ion-label>\\n            <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cpassword\\\"></ion-input>\\n        </ion-item>\\n      </ion-list>\\n      \\n      <div magin-vertical text-center> \\n      <!-- access button-->\\n      <ion-button (click) = \\\"register()\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"log-in\\\"></ion-icon>\\n        Registrieren\\n      </ion-button>\\n    </div>\\n    <br>\\n    </ion-card>\\n  \\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { environment } from './../../environments/environment';\n\n\n\n/** Alert to tell the user he is logged in add this to the constructor for best results */\n\nimport {AlertController} from '@ionic/angular';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  userID = '';\n  password = '';\n  cpassword = '';\n\n  constructor(public afAuth: AngularFireAuth,\n              public alert: AlertController,\n              /** redirect the user to another page once the login is successful */\n              public router: Router ) { }\n\n  ngOnInit() {\n  }\n\n async register() {\n    const { userID, password, cpassword } = this;\n    if (password !== cpassword) {\n      this.showAlert('Kennwort falsch', 'Noch mals versuchen');\n      return console.error(' PASSWORDS dont match');\n    }\n    try {\n      const res = await this.afAuth.auth.createUserWithEmailAndPassword(userID + '@yahoo.com', password);\n      console.log(res);\n      this.showAlert('Eingeloggt', ' ');\n      /** redirect to home page */\n      this.router.navigate(['/home']);\n    } catch (error) {\n      console.dir(error);\n      this.showAlert('err', error.message);\n    }\n  }\nasync showAlert( header: string, message: string) {\n  const alert = await this.alert.create({\n    header,\n    message,\n    buttons: ['Have a cookie']\n  });\n  await alert.present();\n}\n\n}\n"],"sourceRoot":""}