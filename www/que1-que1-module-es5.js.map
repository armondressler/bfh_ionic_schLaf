{"version":3,"sources":["./src/app/window/que1/que1.page.html","./src/app/window/que1/que1-routing.module.ts","./src/app/window/que1/que1.module.ts","./src/app/window/que1/que1.page.scss","./src/app/window/que1/que1.page.ts"],"names":[],"mappings":"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","file":"que1-que1-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      SleepExpert\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <br>\\r\\n\\r\\n  <!--back button-->\\r\\n\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\" position=\\\"left\\\">\\r\\n      <ion-back-button defaultHref=\\\"home\\\">\\r\\n\\r\\n      </ion-back-button> Zurück\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>\\r\\n        Schlaffenster bestimmen\\r\\n      </ion-card-title>\\r\\n    </ion-card-header>\\r\\n\\r\\n <ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col size=\\\"1\\\">\\r\\n    \\r\\n  </ion-col>\\r\\n  <ion-col>\\r\\n    <ion-item>\\r\\n       \\r\\n      <ion-label class=\\\"ion-text-wrap\\\">\\r\\n        Wann möchten Sie morgen aufstehen?\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  \\r\\n  <ion-row>\\r\\n\\r\\n      <ion-col>\\r\\n        <!-- emply space -> Time to the right of the window -->\\r\\n      </ion-col>\\r\\n\\r\\n      \\r\\n      <ion-item >\\r\\n        <ion-label \\r\\n        id = \\\"wakeUp\\\"\\r\\n        position=\\\"floating\\\">HH:mm</ion-label>\\r\\n        <ion-datetime \\r\\n        displayFormat=\\\"HH:mm\\\"  \\r\\n        value=\\\"{{getHourAndMinute()}}\\\"></ion-datetime>\\r\\n      </ion-item></ion-row>\\r\\n  \\r\\n</ion-grid>\\r\\n    \\r\\n\\r\\n    \\r\\n\\r\\n        <ion-item>\\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src=\\\"assets/img/sheep.png\\\">\\r\\n          </ion-avatar>\\r\\n    \\r\\n          <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            Wann gehen Sie ins Bett, damit Sie zu dieser Zeit aufstehen können?\\r\\n          </ion-label>\\r\\n        </ion-item>  \\r\\n        \\r\\n        <ion-grid> <ion-row>\\r\\n\\r\\n          <ion-col>\\r\\n            <!-- emply space -> Time to the right of the window -->\\r\\n          </ion-col>\\r\\n  \\r\\n  \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">HH:mm</ion-label>\\r\\n            <ion-datetime displayFormat=\\\"HH:mm\\\"\\r\\n            [(ngModel)]=\\\"bettzeit\\\" \\r\\n          (ionChange) =\\\"bedtimeChanged($event)\\\" >></ion-datetime>\\r\\n          </ion-item></ion-row></ion-grid>\\r\\n          \\r\\n          \\r\\n    <div magin-vertical text-right>\\r\\n      <!-- @ margin-verical text-right := makes the items be on the \\r\\n      right side of the page-->\\r\\n\\r\\n      <ion-button href=\\\"/window/que2/\\\" color =\\\"primary\\\">\\r\\n        <!-- Add icon to the button\\r\\n          @slot start:= positions the icon in front of the name -->\\r\\n        <ion-icon slot=\\\"start\\\" name=\\\"arrow-forward\\\"></ion-icon>\\r\\n        <!-- name of button-->\\r\\n        Weiter\\r\\n\\r\\n      </ion-button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <!--Progeress bar: just for estetics and ffun-->\\r\\n    <ion-progress-bar color=\\\"secondary\\\" value=\\\"0.2\\\"></ion-progress-bar>\\r\\n\\r\\n\\r\\n  </ion-card>\\r\\n\\r\\n  <!-- make the radio buttons or a toggle button-->\\r\\n\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Que1Page } from './que1.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Que1Page\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class Que1PageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Que1PageRoutingModule } from './que1-routing.module';\r\n\r\nimport { Que1Page } from './que1.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Que1PageRoutingModule\r\n  ],\r\n  declarations: [Que1Page]\r\n})\r\nexport class Que1PageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpbmRvdy9xdWUxL3F1ZTEucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// initialize cloud firestore\r\nconst db = firebase.firestore();\r\n\r\n// get data from firebase\r\nconst wakeUp = db.collection(\"SleepExpert\").doc(\"aufstehen\");\r\nwakeUp.get().then(function(doc) {\r\nif (doc.exists) {\r\n  console.log(\"Aufstehen:\", doc.data());\r\n\r\n  let data = doc.data();\r\n  console.log(data.hour,\":\", data.minute);\r\n  \r\n\r\n } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"No such document!\");\r\n  }\r\n}).catch(function(error) {\r\n console.log(\"Error getting document:\", error);\r\n});\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-que1',\r\n  templateUrl: './que1.page.html',\r\n  styleUrls: ['./que1.page.scss'],\r\n})\r\n\r\nexport class Que1Page implements OnInit {\r\nwakeUp = new Date('hh:mm').toDateString();\r\nbettzeit = new Date('hh:mm').toDateString();\r\n\r\n  constructor() { }\r\n  datum = \" \";\r\n \r\n  bedtimeChanged(data) {\r\n    /** asta face sa ai expus in consola data si ora selectata, ceva tre\r\n     * modificat, dar inca nu stiu ce aume\r\n     */\r\n  \r\n  console.log(this.bettzeit);\r\n  let timedata : string[] = this.bettzeit.split(\":\");\r\n  console.log(timedata);\r\n  \r\n  // Add a new document in collection \"sleepexpert\"\r\n  db.collection(\"SleepExpert\").doc(\"bettzeit\").set({\r\n  /** data is always set but not updated --> use update and not set in line 42 */\r\n  hour: timedata[0],\r\n  minute: timedata[1]\r\n  })\r\n  .then(function() {\r\n  console.log(\"Document successfully written!\");\r\n  })\r\n  .catch(function(error) {\r\n  console.error(\"Error writing document: \", error);\r\n  });\r\n  }\r\n  //display data on screen for the user\r\ngetHourAndMinute(){\r\n  return this.datum; \r\n}\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}