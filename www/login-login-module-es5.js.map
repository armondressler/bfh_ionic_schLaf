{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-avatar slot=\\\"start\\\">\\r\\n      <img src=\\\"assets/img/sheep.png\\\">\\r\\n    </ion-avatar>\\r\\n    <ion-title>SleepExpert</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-title> Bitte loggen Sie sich ein </ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Benutzername</ion-label>\\r\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userID\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\"> Kennwort</ion-label>\\r\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n        <!-- @type password := this hides the text and it makes it \\r\\n      appear as if its *** -->\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n    \\r\\n    <div magin-vertical text-center> \\r\\n    <!-- access button-->\\r\\n    <ion-button (click) = \\\"login()\\\">\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"log-in\\\"></ion-icon>\\r\\n      Einloggen\\r\\n    </ion-button>\\r\\n  </div>\\r\\n  <br>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  /** vars for the Authentification of the user */\n  userID = '';\n  password = '';\n \n\n  constructor(public afAuth: AngularFireAuth,\n              public alert: AlertController,\n              public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  async login() {\n    const { userID, password } = this;\n    try {\n      const res = await this.afAuth.auth.signInWithEmailAndPassword(userID + '@yahoo.com', password)\n      .then(data => {\n        this.router.navigate(['/home']);\n      });\n    } catch (err) {\n      console.dir(err);\n      if (err.code === 'auth/wrong-password') {\n        this.showAlert('Kennwort falsch', 'Noch mals versuchen');\n        console.log ('Falsche Passwort');\n      }\n      if (err.code === 'auth/user-not-found') {\n        this.showAlert('Benutzername falsch', 'Noch mals versuchen');\n        console.log ('User invalid');\n      }\n      if (err.code === 'auth/invalid-email') {\n        this.showAlert('Email falsch', 'Noch mals versuchen');\n        console.log ('Invalid email');\n      }\n    }\n \n  }\n  async showAlert( header: string, message: string) {\n    const alert = await this.alert.create({\n      header,\n      message,\n      buttons: ['Ok']\n    });\n    await alert.present();\n  }\n}\n"],"sourceRoot":""}